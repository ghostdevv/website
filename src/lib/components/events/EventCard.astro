---
import { type Event, placeTagColours, typeTagColours } from './events';
import { getImage } from 'astro:assets';
import { format } from 'date-fns';

interface Props {
	event: Event;
}

const { event } = Astro.props;

const img = await getImage({
	src: event.thumbnail,
	width: 800,
	format: 'webp',
});
---

<script>
	const observer = new IntersectionObserver((entries) => {
		for (const entry of entries) {
			if (entry.isIntersecting) {
				const target = entry.target as HTMLDivElement;
				const imageUrl = target.dataset.eventImage;
				target.style.backgroundImage = `url(${imageUrl})`;
				observer.unobserve(target);
			}
		}
	});

	document.addEventListener('astro:page-load', () => {
		document.querySelectorAll('[data-event-image]').forEach((element) => {
			observer.observe(element);
		});
	});
</script>

<a href={event.url} target="_blank" class="event" title={event.name}>
	<div class="image" data-event-image={img.src}></div>

	<div class="details">
		<div class="tags">
			<span
				class="tag"
				style={`--tag-colour: ${placeTagColours[event.place]};`}
			>
				{event.place.replaceAll('-', ' ')}
			</span>

			<span
				class="tag"
				style={`--tag-colour: ${typeTagColours[event.type]};`}
			>
				{event.type}
			</span>

			<p class="date">
				{format(event.start, 'do MMM yyyy')}
			</p>
		</div>

		<h3 class="title">{event.name}</h3>
	</div>
</a>

<style lang="scss">
	@use 'include-media' as *;

	.event {
		display: flex;
		flex-direction: column;
		gap: 0px;

		min-width: 325px;
		width: 100%;

		color: var(--text);
		background-color: var(--background-secondary);
		border-radius: 12px;
		overflow: hidden;

		transition: box-shadow 0.2s ease-in-out;

		@include media('<400px') {
			min-width: 200px;
			flex-shrink: 0;
			width: 100%;
		}

		&:hover,
		&:active,
		&:focus {
			color: var(--text);
			text-decoration: none;
			background-color: var(--background-secondary);
			box-shadow:
				0 0 0 transparent,
				0 0 0 5px var(--primary);
		}

		.image {
			position: relative;
			width: 100%;
			height: auto;
			aspect-ratio: 2/1;
			background-position: 0% 50%;
			background-repeat: no-repeat;
			background-size: cover;

			transform: scale(1.04);
			border-radius: 12px 12px 0 0;
			box-shadow:
				-2px 1px 10px #000a inset,
				-2px 3px 20px #0006 inset,
				-7px 3px 3px #fff6 inset;
		}

		.details {
			display: flex;
			flex-direction: column;
			padding: 8px 18px;
			padding-top: 16px;
			gap: 4px;

			.title {
				font-size: calc(1.275rem + 0.3vw);
				font-weight: 500;
				padding-right: 8px;
				flex-grow: 1;
				text-overflow: ellipsis;
			}
		}
	}

	.tags {
		display: flex;
		flex-flow: row wrap;
		align-items: center;
		justify-content: flex-end3;
		gap: 8px;

		.date {
			margin-left: auto;
		}
	}

	.tag {
		background-color: rgba(var(--tag-colour), 0.2);
		color: rgba(var(--tag-colour));

		border-radius: 16px;

		padding: 4px 16px;
		font-size: 11px;
		font-weight: 800;

		height: fit-content;
		width: fit-content;

		text-transform: uppercase;
		white-space: nowrap;
	}
</style>
